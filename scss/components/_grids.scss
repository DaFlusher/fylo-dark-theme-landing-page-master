@use 'sass:math';
@use 'variables';
@use 'mixins';

$grid-columns: 12;

.my-container{
    width: 100%;
    max-width: 100vw;
    margin: 0 auto;
    padding: 0.5rem 1.5rem;
    box-sizing: border-box;
}

//making a placeholder for the flex-properties
%grid-row{
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
}
.my-row{
    @extend %grid-row;
}


//column classes
@include mixins.xs{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}

@include mixins.sm{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}

@include mixins.md{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}

@include mixins.lg{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}

@include mixins.xl{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}

@include mixins.xxl{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xxl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i*100%, $grid-columns);
        }
    }
}



